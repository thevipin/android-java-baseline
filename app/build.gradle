apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    dataBinding {
        enabled = true
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "arch.line.base.baseline"
        minSdkVersion 22
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        //Don't set debug as buildType
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }

        // Used for template Arch
        baseline {
            initWith debug
            /**
             * inject value to manifest hostName is key used in manifest
             * This is way to inject facebook-key,google-map-key to manifest
             * Ref https://developer.android.com/studio/build/manifest-build-variables
             */
            manifestPlaceholders = [hostName: "internal.example.com"]
            //applicationIdSuffix ".debugStaging"
            /**
             * inject String constant to program
             * Api URL, Keys and other Constants which change over build are write here
             */
            buildConfigField "String", "BASE_API_URL", '"https://api.perfomatix.com/api"'
        }

        staging {
            initWith debug
            manifestPlaceholders = [hostName: "internal.example.com"]
           // applicationIdSuffix ".debugStaging"
            buildConfigField "String", "BASE_API_URL", '"https://api.perfomatix.com/api"'
        }

        develop {
            initWith debug
            manifestPlaceholders = [hostName: "internal.example.com"]
            //applicationIdSuffix ".debugDevelop"
            buildConfigField "String", "BASE_API_URL", '"https://api.perfomatix.com/api"'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    def appcompat_version = "27.1.1"
    def junit_version = "4.12"
    def test_version = "1.0.2"
    def espresso_version = "3.0.2"
    def databinding_version = "3.1.2"
    def dagger_version = "2.11"
    def room_version = "1.1.0"
    def gson_version = "2.8.0"
    def paging_version = "1.0.0"
    def retrofit_version = "2.4.0"
    def httpretrofit_version = "3.9.0"
    def extretrofit_version = "2.3.0"

    //DataBinding
    //implementation "com.android.databinding:compiler:$databinding_version"

    //recycler-view library
    implementation "com.android.support:recyclerview-v7:$appcompat_version"
    //Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Paging ref http://androidkt.com/paging-library/ , https://developer.android.com/topic/libraries/architecture/paging/
    implementation "android.arch.paging:runtime:$paging_version"

    //Dagger 2
    implementation "com.google.dagger:dagger:$dagger_version"

    // Room database
    implementation "android.arch.persistence.room:runtime:$room_version"
    annotationProcessor "android.arch.persistence.room:compiler:$room_version"
    // optional - RxJava support for Room
    implementation "android.arch.persistence.room:rxjava2:$room_version"
    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$room_version"

    //Rest Api call
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$extretrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$extretrofit_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$httpretrofit_version"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:$appcompat_version"
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support.test:runner:$test_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
}
